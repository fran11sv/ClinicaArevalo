/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Forms;

import Controladores.CategoriasCie10JpaController;
import Controladores.EnfermedadesCie10JpaController;
import Controladores.SubGruposCie10JpaController;
import Entidades.CategoriasCie10;
import Entidades.EnfermedadesCie10;
import Entidades.SubGruposCie10;
import Entidades.entityMain;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sotoa
 */
public class CIE10 extends javax.swing.JFrame {
CategoriasCie10JpaController CC = new CategoriasCie10JpaController(entityMain.getInstance());
EnfermedadesCie10JpaController EC = new EnfermedadesCie10JpaController(entityMain.getInstance());
SubGruposCie10JpaController SC = new SubGruposCie10JpaController(entityMain.getInstance());
EnfermedadesCie10 EditarEnfermedad;
EnfermedadesCie10 EliminarEnfermedad;
CategoriasCie10 EditarCategoria;
CategoriasCie10 EliminarCategoria;
    /** Creates new form CIE10 */
    public CIE10() {
        initComponents();
        CrearModeloCategoria1();
        CargarTablaCategoria();
        CrearModeloEnfermedades();
        CargarTablaEnfermedades();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Paneles = new javax.swing.JTabbedPane();
        PanelCategoria = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtBuscarSubGrupo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSubGrupo = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        lblSubGrupoSeleccionado = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCategoriaNombre = new javax.swing.JTextField();
        btnAgregarCategoria = new javax.swing.JButton();
        btnEditarCategoria = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbCategorias = new javax.swing.JTable();
        btnEliminarCategoria = new javax.swing.JButton();
        btnNuevoCategoria = new javax.swing.JButton();
        btnCancelarCategoria = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        PanelEnfermedad = new javax.swing.JPanel();
        txtBuscarCategoria = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbCategoria2 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtNombreEnfermedad = new javax.swing.JTextField();
        btnAgregarEnfermedad = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbEnfermedades = new javax.swing.JTable();
        btnNuevoEnfermedad = new javax.swing.JButton();
        btnEliminarEnfermedad = new javax.swing.JButton();
        btnEditarEnfermedad = new javax.swing.JButton();
        btnCancelarEnfermedad = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnVolver1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(15, 76, 129));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(187, 232, 223));

        Paneles.setBackground(new java.awt.Color(76, 201, 223));
        Paneles.setForeground(new java.awt.Color(0, 0, 0));
        Paneles.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N

        PanelCategoria.setBackground(new java.awt.Color(15, 76, 129));

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(239, 239, 239));
        jLabel2.setText("Buscar  Subgrupo : ");
        jLabel2.setPreferredSize(new java.awt.Dimension(200, 30));

        txtBuscarSubGrupo.setBackground(new java.awt.Color(239, 239, 239));
        txtBuscarSubGrupo.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtBuscarSubGrupo.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscarSubGrupo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarSubGrupoKeyReleased(evt);
            }
        });

        tbSubGrupo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbSubGrupo);

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(239, 239, 239));
        jLabel3.setText("SubGrupo Seleccionado:");

        lblSubGrupoSeleccionado.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        lblSubGrupoSeleccionado.setForeground(new java.awt.Color(239, 239, 239));

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(239, 239, 239));
        jLabel4.setText("Nombre de Categoria:");

        txtCategoriaNombre.setBackground(new java.awt.Color(239, 239, 239));
        txtCategoriaNombre.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtCategoriaNombre.setForeground(new java.awt.Color(0, 0, 0));
        txtCategoriaNombre.setEnabled(false);

        btnAgregarCategoria.setBackground(new java.awt.Color(76, 201, 223));
        btnAgregarCategoria.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnAgregarCategoria.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregarCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Agg 32.png"))); // NOI18N
        btnAgregarCategoria.setText(" Agregar ");
        btnAgregarCategoria.setEnabled(false);
        btnAgregarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCategoriaActionPerformed(evt);
            }
        });

        btnEditarCategoria.setBackground(new java.awt.Color(76, 201, 223));
        btnEditarCategoria.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnEditarCategoria.setForeground(new java.awt.Color(0, 0, 0));
        btnEditarCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Guardar Ed.png"))); // NOI18N
        btnEditarCategoria.setText(" Guardar Edici√≥n");
        btnEditarCategoria.setEnabled(false);
        btnEditarCategoria.setPreferredSize(new java.awt.Dimension(200, 40));
        btnEditarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCategoriaActionPerformed(evt);
            }
        });

        tbCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCategoriasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbCategorias);

        btnEliminarCategoria.setBackground(new java.awt.Color(76, 201, 223));
        btnEliminarCategoria.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnEliminarCategoria.setForeground(new java.awt.Color(0, 0, 0));
        btnEliminarCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Eliminar 32.png"))); // NOI18N
        btnEliminarCategoria.setText(" Eliminar");
        btnEliminarCategoria.setEnabled(false);
        btnEliminarCategoria.setPreferredSize(new java.awt.Dimension(200, 40));
        btnEliminarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCategoriaActionPerformed(evt);
            }
        });

        btnNuevoCategoria.setBackground(new java.awt.Color(76, 201, 223));
        btnNuevoCategoria.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnNuevoCategoria.setForeground(new java.awt.Color(0, 0, 0));
        btnNuevoCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Editar 32.png"))); // NOI18N
        btnNuevoCategoria.setText(" Nuevo");
        btnNuevoCategoria.setPreferredSize(new java.awt.Dimension(200, 40));
        btnNuevoCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoCategoriaActionPerformed(evt);
            }
        });

        btnCancelarCategoria.setBackground(new java.awt.Color(76, 201, 223));
        btnCancelarCategoria.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnCancelarCategoria.setForeground(new java.awt.Color(0, 0, 0));
        btnCancelarCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Cancelar 32.png"))); // NOI18N
        btnCancelarCategoria.setText(" Cancelar");
        btnCancelarCategoria.setEnabled(false);
        btnCancelarCategoria.setPreferredSize(new java.awt.Dimension(200, 40));
        btnCancelarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCategoriaActionPerformed(evt);
            }
        });

        btnVolver.setBackground(new java.awt.Color(76, 201, 223));
        btnVolver.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(0, 0, 0));
        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Menu.png"))); // NOI18N
        btnVolver.setText(" Men√∫ Principal");
        btnVolver.setPreferredSize(new java.awt.Dimension(200, 60));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelCategoriaLayout = new javax.swing.GroupLayout(PanelCategoria);
        PanelCategoria.setLayout(PanelCategoriaLayout);
        PanelCategoriaLayout.setHorizontalGroup(
            PanelCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCategoriaLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(PanelCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelCategoriaLayout.createSequentialGroup()
                        .addGroup(PanelCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelCategoriaLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(8, 8, 8)
                                .addComponent(txtCategoriaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAgregarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminarCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNuevoCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEditarCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancelarCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(PanelCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelCategoriaLayout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtBuscarSubGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblSubGrupoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        PanelCategoriaLayout.setVerticalGroup(
            PanelCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCategoriaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PanelCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSubGrupoSeleccionado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PanelCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBuscarSubGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(PanelCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCategoriaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAgregarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(PanelCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PanelCategoriaLayout.createSequentialGroup()
                        .addComponent(btnNuevoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnEliminarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnEditarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnCancelarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(164, 164, 164))
        );

        Paneles.addTab("Categorias", PanelCategoria);

        PanelEnfermedad.setBackground(new java.awt.Color(15, 76, 129));

        txtBuscarCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarCategoriaKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel5.setText("Buscar  Categoria : ");
        jLabel5.setPreferredSize(new java.awt.Dimension(200, 30));

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel6.setText("Categoria Seleccionada:");
        jLabel6.setPreferredSize(new java.awt.Dimension(200, 30));

        tbCategoria2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tbCategoria2);

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel7.setText("Nombre de Enfermedad:");
        jLabel7.setPreferredSize(new java.awt.Dimension(200, 30));

        btnAgregarEnfermedad.setBackground(new java.awt.Color(76, 201, 223));
        btnAgregarEnfermedad.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnAgregarEnfermedad.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregarEnfermedad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Agg 32.png"))); // NOI18N
        btnAgregarEnfermedad.setText(" Agregar ");
        btnAgregarEnfermedad.setEnabled(false);
        btnAgregarEnfermedad.setPreferredSize(new java.awt.Dimension(200, 40));
        btnAgregarEnfermedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarEnfermedadActionPerformed(evt);
            }
        });

        tbEnfermedades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbEnfermedades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbEnfermedadesMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbEnfermedades);

        btnNuevoEnfermedad.setBackground(new java.awt.Color(76, 201, 223));
        btnNuevoEnfermedad.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnNuevoEnfermedad.setForeground(new java.awt.Color(0, 0, 0));
        btnNuevoEnfermedad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Editar 32.png"))); // NOI18N
        btnNuevoEnfermedad.setText(" Nuevo");
        btnNuevoEnfermedad.setPreferredSize(new java.awt.Dimension(200, 40));
        btnNuevoEnfermedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoEnfermedadActionPerformed(evt);
            }
        });

        btnEliminarEnfermedad.setBackground(new java.awt.Color(76, 201, 223));
        btnEliminarEnfermedad.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnEliminarEnfermedad.setForeground(new java.awt.Color(0, 0, 0));
        btnEliminarEnfermedad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Eliminar 32.png"))); // NOI18N
        btnEliminarEnfermedad.setText(" Eliminar");
        btnEliminarEnfermedad.setEnabled(false);
        btnEliminarEnfermedad.setPreferredSize(new java.awt.Dimension(200, 40));
        btnEliminarEnfermedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEnfermedadActionPerformed(evt);
            }
        });

        btnEditarEnfermedad.setBackground(new java.awt.Color(76, 201, 223));
        btnEditarEnfermedad.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnEditarEnfermedad.setForeground(new java.awt.Color(0, 0, 0));
        btnEditarEnfermedad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Guardar Ed.png"))); // NOI18N
        btnEditarEnfermedad.setText(" Guardar Edici√≥n");
        btnEditarEnfermedad.setEnabled(false);
        btnEditarEnfermedad.setPreferredSize(new java.awt.Dimension(200, 40));
        btnEditarEnfermedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarEnfermedadActionPerformed(evt);
            }
        });

        btnCancelarEnfermedad.setBackground(new java.awt.Color(76, 201, 223));
        btnCancelarEnfermedad.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnCancelarEnfermedad.setForeground(new java.awt.Color(0, 0, 0));
        btnCancelarEnfermedad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Cancelar 32.png"))); // NOI18N
        btnCancelarEnfermedad.setText(" Cancelar");
        btnCancelarEnfermedad.setEnabled(false);
        btnCancelarEnfermedad.setPreferredSize(new java.awt.Dimension(200, 40));
        btnCancelarEnfermedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarEnfermedadActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel8.setPreferredSize(new java.awt.Dimension(200, 30));

        btnVolver1.setBackground(new java.awt.Color(76, 201, 223));
        btnVolver1.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnVolver1.setForeground(new java.awt.Color(0, 0, 0));
        btnVolver1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Menu.png"))); // NOI18N
        btnVolver1.setText(" Men√∫ Principal");
        btnVolver1.setPreferredSize(new java.awt.Dimension(200, 60));
        btnVolver1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolver1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelEnfermedadLayout = new javax.swing.GroupLayout(PanelEnfermedad);
        PanelEnfermedad.setLayout(PanelEnfermedadLayout);
        PanelEnfermedadLayout.setHorizontalGroup(
            PanelEnfermedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEnfermedadLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(PanelEnfermedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelEnfermedadLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombreEnfermedad, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregarEnfermedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelEnfermedadLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelEnfermedadLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(PanelEnfermedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEliminarEnfermedad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNuevoEnfermedad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEditarEnfermedad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancelarEnfermedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnVolver1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(94, 116, Short.MAX_VALUE))
        );
        PanelEnfermedadLayout.setVerticalGroup(
            PanelEnfermedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEnfermedadLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PanelEnfermedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscarCategoria))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(PanelEnfermedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNombreEnfermedad)
                    .addComponent(btnAgregarEnfermedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(PanelEnfermedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelEnfermedadLayout.createSequentialGroup()
                        .addComponent(btnNuevoEnfermedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnEliminarEnfermedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnEditarEnfermedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnCancelarEnfermedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVolver1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9))
        );

        Paneles.addTab("Enfermedades", PanelEnfermedad);

        jPanel2.setBackground(new java.awt.Color(253, 149, 53));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tabla de Enfermedades");
        jLabel1.setPreferredSize(new java.awt.Dimension(407, 60));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(Paneles, javax.swing.GroupLayout.PREFERRED_SIZE, 1110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(Paneles, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarCategoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarCategoriaKeyReleased
        CrearModeloCategoria();
        CargarTablaCategoriaporNombre(this.txtBuscarCategoria.getText());
    }//GEN-LAST:event_txtBuscarCategoriaKeyReleased

    private void btnAgregarEnfermedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarEnfermedadActionPerformed
         try {
            EnfermedadesCie10 E = new EnfermedadesCie10();
            E.setDescripcion(this.txtNombreEnfermedad.getText());
            E.setIdCategoria((CategoriasCie10) tbCategoria2.getValueAt(tbCategoria2.getSelectedRow(),0));


            EC.create(E);
            JOptionPane.showMessageDialog(null, "Datos Guardados Exitosamente");
            CrearModeloEnfermedades();
            CargarTablaEnfermedades();
            CrearModeloCategoria();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnAgregarEnfermedadActionPerformed

    private void btnEditarEnfermedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarEnfermedadActionPerformed
         try {
            EditarEnfermedad.setDescripcion(this.txtNombreEnfermedad.getText());
            EditarEnfermedad.setIdCategoria((CategoriasCie10) tbCategoria2.getValueAt(tbCategoria2.getSelectedRow(),0));
            EC.edit(EditarEnfermedad);
            JOptionPane.showMessageDialog(null, "El registro fue editado con √âxito");
            CrearModeloEnfermedades();
            CargarTablaEnfermedades();
            CrearModeloCategoria();
            this.btnAgregarEnfermedad.setEnabled(false);
            this.btnCancelarEnfermedad.setEnabled(false);
            this.btnNuevoEnfermedad.setEnabled(true);
            this.btnEditarEnfermedad.setEnabled(false);
            this.btnEliminarEnfermedad.setEnabled(false);
            this.txtNombreEnfermedad.setText("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnEditarEnfermedadActionPerformed

    private void btnEliminarEnfermedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEnfermedadActionPerformed
        int resp = JOptionPane.showConfirmDialog(null, "¬øDesea Eliminar este registro?", "Eliminar Registro", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == resp) {
            try {
                EC.destroy(EliminarEnfermedad.getId());
                JOptionPane.showMessageDialog(null, "El registro fue eliminado con Exito");
                CrearModeloEnfermedades();
                CargarTablaEnfermedades();
                CrearModeloCategoria();
                this.btnAgregarEnfermedad.setEnabled(false);
                this.btnCancelarEnfermedad.setEnabled(false);
                this.btnNuevoEnfermedad.setEnabled(true);
                this.btnEditarEnfermedad.setEnabled(false);
                this.btnEliminarEnfermedad.setEnabled(false);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_btnEliminarEnfermedadActionPerformed

    private void tbEnfermedadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbEnfermedadesMouseClicked
        this.txtNombreEnfermedad.setText(tbEnfermedades.getValueAt(tbEnfermedades.getSelectedRow(), 1).toString());
        
        String id = tbEnfermedades.getValueAt(tbEnfermedades.getSelectedRow(), 0).toString();
        EditarEnfermedad = (EnfermedadesCie10) EC.findEnfermedadesCie10(Integer.parseInt(id));
        EliminarEnfermedad = (EnfermedadesCie10) EC.findEnfermedadesCie10(Integer.parseInt(id));
        this.btnEditarEnfermedad.setEnabled(true);
        this.btnEliminarEnfermedad.setEnabled(true);
    }//GEN-LAST:event_tbEnfermedadesMouseClicked

    private void txtBuscarSubGrupoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarSubGrupoKeyReleased
        CrearModeloSubGrupo();
        CargarTablaSubGrupoporNombre(this.txtBuscarSubGrupo.getText());
    }//GEN-LAST:event_txtBuscarSubGrupoKeyReleased

    private void btnAgregarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCategoriaActionPerformed
        try {
            CategoriasCie10 C = new CategoriasCie10();
            C.setDescripcion(this.txtCategoriaNombre.getText());
            C.setIdSubGrupo(SC.findSubGruposCie10(Integer.parseInt(tbSubGrupo.getValueAt(tbSubGrupo.getSelectedRow(),0).toString())));

            CC.create(C);
            JOptionPane.showMessageDialog(null, "Datos Guardados Exitosamente");
            CrearModeloCategoria1();
            CargarTablaCategoria();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnAgregarCategoriaActionPerformed

    private void btnEliminarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCategoriaActionPerformed
        int resp = JOptionPane.showConfirmDialog(null, "¬øDesea Eliminar este registro?", "Eliminar Registro", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == resp) {
            try {
                CC.destroy(EliminarCategoria.getId());
                JOptionPane.showMessageDialog(null, "El registro fue eliminado con Exito");
                this.btnAgregarCategoria.setEnabled(false);
                this.btnNuevoCategoria.setEnabled(true);
                this.btnCancelarCategoria.setEnabled(false);
                this.btnEditarCategoria.setEnabled(false);
                this.btnEliminarCategoria.setEnabled(false);
                CrearModeloCategoria1();
                CargarTablaCategoria();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_btnEliminarCategoriaActionPerformed

    private void btnEditarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCategoriaActionPerformed
        try {
            EditarCategoria.setDescripcion(this.txtCategoriaNombre.getText());
            EditarCategoria.setIdSubGrupo((SubGruposCie10) tbSubGrupo.getValueAt(tbSubGrupo.getSelectedRow(), 0));
            CC.edit(EditarCategoria);
            JOptionPane.showMessageDialog(null, "El registro fue editado con √âxito");
            this.btnAgregarCategoria.setEnabled(false);
            this.btnNuevoCategoria.setEnabled(true);
            this.btnCancelarCategoria.setEnabled(false);
            this.btnEditarCategoria.setEnabled(false);
            this.btnEliminarCategoria.setEnabled(false);
            this.txtCategoriaNombre.setText("");
            CrearModeloCategoria1();
            CargarTablaCategoria();
            CrearModeloEnfermedades();
            CargarTablaEnfermedades();
            CrearModeloCategoria();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnEditarCategoriaActionPerformed

    private void tbCategoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCategoriasMouseClicked
        txtCategoriaNombre.setText(tbCategorias.getValueAt(tbCategorias.getSelectedRow(), 1).toString());
        String id = tbCategorias.getValueAt(tbCategorias.getSelectedRow(), 0).toString();
        EditarCategoria = (CategoriasCie10) CC.findCategoriasCie10(Integer.parseInt(id));
        EliminarCategoria = (CategoriasCie10) CC.findCategoriasCie10(Integer.parseInt(id));
        this.btnEditarCategoria.setEnabled(true);
        this.btnEliminarCategoria.setEnabled(true);
    }//GEN-LAST:event_tbCategoriasMouseClicked

    private void btnNuevoCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoCategoriaActionPerformed
        this.btnAgregarCategoria.setEnabled(true);
        this.btnNuevoCategoria.setEnabled(false);
        this.btnCancelarCategoria.setEnabled(true);
        this.btnEditarCategoria.setEnabled(false);
        this.btnEliminarCategoria.setEnabled(false);
        this.txtCategoriaNombre.setText("");
    }//GEN-LAST:event_btnNuevoCategoriaActionPerformed

    private void btnCancelarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCategoriaActionPerformed
        this.btnAgregarCategoria.setEnabled(false);
        this.btnNuevoCategoria.setEnabled(true);
        this.btnCancelarCategoria.setEnabled(false);
        this.btnEditarCategoria.setEnabled(false);
        this.btnEliminarCategoria.setEnabled(false);
        CrearModeloCategoria1();
        CargarTablaCategoria();
    }//GEN-LAST:event_btnCancelarCategoriaActionPerformed

    private void btnNuevoEnfermedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoEnfermedadActionPerformed
        this.btnAgregarEnfermedad.setEnabled(true);
        this.btnCancelarEnfermedad.setEnabled(true);
        this.btnNuevoEnfermedad.setEnabled(false);
        this.btnEditarEnfermedad.setEnabled(false);
        this.btnEliminarEnfermedad.setEnabled(false);
        this.txtNombreEnfermedad.setText("");
    }//GEN-LAST:event_btnNuevoEnfermedadActionPerformed

    private void btnCancelarEnfermedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarEnfermedadActionPerformed
        this.btnAgregarEnfermedad.setEnabled(false);
        this.btnCancelarEnfermedad.setEnabled(false);
        this.btnNuevoEnfermedad.setEnabled(true);
        this.btnEditarEnfermedad.setEnabled(false);
        this.btnEliminarEnfermedad.setEnabled(false);
    }//GEN-LAST:event_btnCancelarEnfermedadActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        //Validaci√≥n de regreso
        int mensaje = JOptionPane.showConfirmDialog(null, "¬øRealmente desea regresar al men√∫ principal?"
            + "Se descartar√°n los datos no guardados.", "Regresar al men√∫",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (mensaje == 0) {
            MenuPrincipal menu = new MenuPrincipal();
            menu.setVisible(true);
            this.dispose();
        }else{

        }

    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnVolver1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolver1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVolver1ActionPerformed
    DefaultTableModel modeloCategoria;
    private void CrearModeloCategoria() {
        try {
            modeloCategoria = (new DefaultTableModel(
                    null, new String[]{
                        "ID", "Descripci√≥n","SubGrupo",
                        "Clave de Categoria"}) {
                Class[] types = new Class[]{
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int colIndex) {
                    return canEdit[colIndex];
                }
            });
            this.tbCategoria2.setModel(modeloCategoria);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    private void CargarTablaCategoriaporNombre(String nombre) {
        try {
            Object o[] = null;
            List<CategoriasCie10> listPacientes = CC.findCategoriaporNombre(nombre);
            for (int i = 0; i < listPacientes.size(); i++) {
                modeloCategoria.addRow(o);
                modeloCategoria.setValueAt(listPacientes.get(i).getId(), i, 0);
                modeloCategoria.setValueAt(listPacientes.get(i).getDescripcion(), i, 1);
                modeloCategoria.setValueAt(listPacientes.get(i).getIdSubGrupo().getDescripcion(), i, 2);
                modeloCategoria.setValueAt(listPacientes.get(i).getClave(), i, 3);
            }
//            this.btnSeleccionPaciente.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }    
    }
     DefaultTableModel modeloCategoria1;
    private void CrearModeloCategoria1() {
        try {
            modeloCategoria1 = (new DefaultTableModel(
                    null, new String[]{
                        "ID", "Descripci√≥n","SubGrupo",
                        "Clave de Categoria"}) {
                Class[] types = new Class[]{
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int colIndex) {
                    return canEdit[colIndex];
                }
            });
            this.tbCategorias.setModel(modeloCategoria1);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    private void CargarTablaCategoria() {
        try {
            Object o[] = null;
            List<CategoriasCie10> listPacientes = CC.findAllCategoriaDESC();
            for (int i = 0; i < listPacientes.size(); i++) {
                modeloCategoria1.addRow(o);
                modeloCategoria1.setValueAt(listPacientes.get(i).getId(), i, 0);
                modeloCategoria1.setValueAt(listPacientes.get(i).getDescripcion(), i, 1);
                modeloCategoria1.setValueAt(listPacientes.get(i).getIdSubGrupo().getDescripcion(), i, 2);
                modeloCategoria1.setValueAt(listPacientes.get(i).getClave(), i, 3);
            }
//            this.btnSeleccionPaciente.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }    
    }
    DefaultTableModel modeloEnfermedad;
    private void CrearModeloEnfermedades() {
        try {
            modeloEnfermedad = (new DefaultTableModel(
                    null, new String[]{
                        "ID", "Descripci√≥n","Categoria",
                        "Clave de Enf."}) {
                Class[] types = new Class[]{
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int colIndex) {
                    return canEdit[colIndex];
                }
            });
            this.tbEnfermedades.setModel(modeloEnfermedad);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    private void CargarTablaEnfermedades() {
        try {
            Object o[] = null;
            List<EnfermedadesCie10> listPacientes = EC.findAllEnfermedadesDESC();
            for (int i = 0; i < listPacientes.size(); i++) {
                modeloEnfermedad.addRow(o);
                modeloEnfermedad.setValueAt(listPacientes.get(i).getId(), i, 0);
                modeloEnfermedad.setValueAt(listPacientes.get(i).getDescripcion(), i, 1);
                modeloEnfermedad.setValueAt(listPacientes.get(i).getIdCategoria().getDescripcion(), i, 2);
                modeloEnfermedad.setValueAt(listPacientes.get(i).getClave(), i, 3);
            }
//            this.btnSeleccionPaciente.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }    
    }
    DefaultTableModel modeloSubGrupo;
    private void CrearModeloSubGrupo() {
        try {
            modeloSubGrupo = (new DefaultTableModel(
                    null, new String[]{
                        "ID", "Descripci√≥n","Grupo",
                        "Clave de SubGrupo"}) {
                Class[] types = new Class[]{
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int colIndex) {
                    return canEdit[colIndex];
                }
            });
            this.tbSubGrupo.setModel(modeloSubGrupo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    private void CargarTablaSubGrupoporNombre(String nombre) {
        try {
            Object o[] = null;
            List<SubGruposCie10> listPacientes = SC.findEnfermedadporNombre(nombre);
            for (int i = 0; i < listPacientes.size(); i++) {
                modeloSubGrupo.addRow(o);
                modeloSubGrupo.setValueAt(listPacientes.get(i).getId(), i, 0);
                modeloSubGrupo.setValueAt(listPacientes.get(i).getDescripcion(), i, 1);
                modeloSubGrupo.setValueAt(listPacientes.get(i).getIdGrupo().getDescripcion(), i, 2);
                modeloSubGrupo.setValueAt(listPacientes.get(i).getClave(), i, 3);
            }
//            this.btnSeleccionPaciente.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CIE10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CIE10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CIE10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CIE10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CIE10().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelCategoria;
    private javax.swing.JPanel PanelEnfermedad;
    private javax.swing.JTabbedPane Paneles;
    private javax.swing.JButton btnAgregarCategoria;
    private javax.swing.JButton btnAgregarEnfermedad;
    private javax.swing.JButton btnCancelarCategoria;
    private javax.swing.JButton btnCancelarEnfermedad;
    private javax.swing.JButton btnEditarCategoria;
    private javax.swing.JButton btnEditarEnfermedad;
    private javax.swing.JButton btnEliminarCategoria;
    private javax.swing.JButton btnEliminarEnfermedad;
    private javax.swing.JButton btnNuevoCategoria;
    private javax.swing.JButton btnNuevoEnfermedad;
    private javax.swing.JButton btnVolver;
    private javax.swing.JButton btnVolver1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblSubGrupoSeleccionado;
    private javax.swing.JTable tbCategoria2;
    private javax.swing.JTable tbCategorias;
    private javax.swing.JTable tbEnfermedades;
    private javax.swing.JTable tbSubGrupo;
    private javax.swing.JTextField txtBuscarCategoria;
    private javax.swing.JTextField txtBuscarSubGrupo;
    private javax.swing.JTextField txtCategoriaNombre;
    private javax.swing.JTextField txtNombreEnfermedad;
    // End of variables declaration//GEN-END:variables

}
