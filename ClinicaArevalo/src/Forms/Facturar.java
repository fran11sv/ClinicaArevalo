package Forms;
import Controladores.DetalleFacturaJpaController;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Entidades.Factura;
import Controladores.FacturaJpaController;
import Controladores.ProductoJpaController;
import Entidades.entityMain;
import java.text.SimpleDateFormat;
import java.util.Date;
import Controladores.UsuarioJpaController;
import Entidades.DetalleFactura;
import Entidades.Producto;
import Entidades.Usuario;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.Calendar;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import static org.eclipse.persistence.expressions.ExpressionOperator.Cast;

/**
 *
 * @author Miguel
 */
public class Facturar extends javax.swing.JFrame {
FacturaJpaController FC = new FacturaJpaController(entityMain.getInstance());
UsuarioJpaController UC = new UsuarioJpaController(entityMain.getInstance());
ProductoJpaController PC = new ProductoJpaController(entityMain.getInstance());
DetalleFacturaJpaController DFC = new DetalleFacturaJpaController(entityMain.getInstance());
Factura numFac;
Factura Eliminar;
DetalleFactura EliminarDetalleFactura;
long precio;
    public Facturar() {
        initComponents();
        PanelPestañas.setEnabledAt(1, false);
        CrearModelo();
        CargarTabla();
        Llenar_Combo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        ClinicaArevaloPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("ClinicaArevaloPU").createEntityManager();
        usuarioQuery = java.beans.Beans.isDesignTime() ? null : ClinicaArevaloPUEntityManager.createQuery("SELECT u FROM Usuario u");
        usuarioList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : usuarioQuery.getResultList();
        usuarioQuery1 = java.beans.Beans.isDesignTime() ? null : ClinicaArevaloPUEntityManager.createQuery("SELECT u FROM Usuario u");
        usuarioList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : usuarioQuery1.getResultList();
        jPanel3 = new javax.swing.JPanel();
        PanelPestañas = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Date date = new Date();
        SpinnerDateModel sm =
        new SpinnerDateModel(date, null, null, Calendar.DAY_OF_MONTH);
        spFecha = new javax.swing.JSpinner(sm);
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnSiguiente = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();
        txtCliente = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbFactura = new javax.swing.JTable();
        cmbUsuario = new javax.swing.JComboBox<>();
        txtNumFac = new javax.swing.JTextField();
        lblDireccion = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lblFactura = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtProd = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbProducto = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbDetalleFactura = new javax.swing.JTable();
        lblTotal = new javax.swing.JLabel();
        btnAgregar2 = new javax.swing.JButton();
        txtCancelar = new javax.swing.JButton();
        btnEliminar2 = new javax.swing.JButton();
        btnCobrar = new javax.swing.JButton();
        txtImprimir = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Factura");
        setResizable(false);
        setSize(new java.awt.Dimension(1360, 700));

        jPanel3.setBackground(new java.awt.Color(187, 232, 223));

        PanelPestañas.setBackground(new java.awt.Color(76, 201, 223));
        PanelPestañas.setForeground(new java.awt.Color(0, 0, 0));
        PanelPestañas.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        PanelPestañas.setPreferredSize(new java.awt.Dimension(1110, 524));

        jPanel1.setBackground(new java.awt.Color(15, 76, 129));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(239, 239, 239));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("N° de Factura:");
        jLabel1.setPreferredSize(new java.awt.Dimension(200, 30));

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(239, 239, 239));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Fecha de Factura:");
        jLabel2.setPreferredSize(new java.awt.Dimension(200, 30));

        JSpinner.DateEditor de = new JSpinner.DateEditor(spFecha, "dd-MM-yyyy");
        spFecha.setEditor(de);
        spFecha.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N

        spFecha.setEnabled(false);

        spFecha.setPreferredSize(new java.awt.Dimension(200, 35));
        spFecha.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        spFecha.setEnabled(false);
        spFecha.setPreferredSize(new java.awt.Dimension(200, 30));

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(239, 239, 239));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Cliente:");
        jLabel3.setPreferredSize(new java.awt.Dimension(200, 30));

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(239, 239, 239));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Usuario:");
        jLabel4.setPreferredSize(new java.awt.Dimension(200, 30));

        btnSiguiente.setBackground(new java.awt.Color(76, 201, 223));
        btnSiguiente.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnSiguiente.setForeground(new java.awt.Color(0, 0, 0));
        btnSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Siguiente 32.png"))); // NOI18N
        btnSiguiente.setText("Siguiente ");
        btnSiguiente.setEnabled(false);
        btnSiguiente.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        btnSiguiente.setPreferredSize(new java.awt.Dimension(150, 40));
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(76, 201, 223));
        btnLimpiar.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(0, 0, 0));
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/limpiar 32.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setEnabled(false);
        btnLimpiar.setPreferredSize(new java.awt.Dimension(150, 40));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnMenu.setBackground(new java.awt.Color(76, 201, 223));
        btnMenu.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnMenu.setForeground(new java.awt.Color(0, 0, 0));
        btnMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Home-80_icon-icons.com_57317.png"))); // NOI18N
        btnMenu.setText(" Menú Principal");
        btnMenu.setPreferredSize(new java.awt.Dimension(150, 40));
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        txtCliente.setBackground(new java.awt.Color(239, 239, 239));
        txtCliente.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtCliente.setForeground(new java.awt.Color(0, 0, 0));
        txtCliente.setEnabled(false);
        txtCliente.setPreferredSize(new java.awt.Dimension(200, 30));
        txtCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtClienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClienteKeyTyped(evt);
            }
        });

        btnAgregar.setBackground(new java.awt.Color(76, 201, 223));
        btnAgregar.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Agg 32.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setEnabled(false);
        btnAgregar.setPreferredSize(new java.awt.Dimension(150, 40));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnNuevo.setBackground(new java.awt.Color(76, 201, 223));
        btnNuevo.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(0, 0, 0));
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Guardar Ed.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setPreferredSize(new java.awt.Dimension(150, 40));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(76, 201, 223));
        btnEliminar.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 0, 0));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Eliminar 32.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.setPreferredSize(new java.awt.Dimension(150, 40));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        tbFactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbFactura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbFacturaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbFactura);

        cmbUsuario.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        cmbUsuario.setPreferredSize(new java.awt.Dimension(200, 30));

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, usuarioList, cmbUsuario);
        bindingGroup.addBinding(jComboBoxBinding);

        txtNumFac.setEditable(false);
        txtNumFac.setBackground(new java.awt.Color(239, 239, 239));
        txtNumFac.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtNumFac.setForeground(new java.awt.Color(0, 0, 0));
        txtNumFac.setPreferredSize(new java.awt.Dimension(200, 30));

        lblDireccion.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lblDireccion.setForeground(new java.awt.Color(255, 255, 255));
        lblDireccion.setText("Dirección:");

        txtDireccion.setBackground(new java.awt.Color(255, 255, 255));
        txtDireccion.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txtDireccion.setForeground(new java.awt.Color(0, 0, 0));
        txtDireccion.setEnabled(false);
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDireccion)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumFac, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtDireccion)
                                .addGap(242, 242, 242)))))
                .addGap(95, 95, 95))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumFac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblDireccion)
                        .addGap(15, 15, 15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addGap(12, 12, 12)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );

        PanelPestañas.addTab("Datos de Factura", jPanel1);

        jPanel2.setBackground(new java.awt.Color(15, 76, 129));

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(239, 239, 239));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("N° de Factura:");
        jLabel6.setPreferredSize(new java.awt.Dimension(200, 30));

        lblFactura.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        lblFactura.setForeground(new java.awt.Color(239, 239, 239));
        lblFactura.setPreferredSize(new java.awt.Dimension(200, 30));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, txtNumFac, org.jdesktop.beansbinding.ELProperty.create("${text}"), lblFactura, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(239, 239, 239));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Producto:");
        jLabel5.setPreferredSize(new java.awt.Dimension(200, 30));

        txtProd.setBackground(new java.awt.Color(239, 239, 239));
        txtProd.setForeground(new java.awt.Color(0, 0, 0));
        txtProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProdKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(239, 239, 239));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Total:   $");
        jLabel8.setPreferredSize(new java.awt.Dimension(150, 30));

        tbProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProductoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbProducto);

        tbDetalleFactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbDetalleFactura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDetalleFacturaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbDetalleFactura);

        lblTotal.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(239, 239, 239));
        lblTotal.setText("$0.00");
        lblTotal.setPreferredSize(new java.awt.Dimension(150, 30));

        btnAgregar2.setBackground(new java.awt.Color(76, 201, 223));
        btnAgregar2.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnAgregar2.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Agg 32.png"))); // NOI18N
        btnAgregar2.setText(" Agregar");
        btnAgregar2.setPreferredSize(new java.awt.Dimension(150, 40));
        btnAgregar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregar2ActionPerformed(evt);
            }
        });

        txtCancelar.setBackground(new java.awt.Color(76, 201, 223));
        txtCancelar.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        txtCancelar.setForeground(new java.awt.Color(0, 0, 0));
        txtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Cancelar 32.png"))); // NOI18N
        txtCancelar.setText(" Cancelar");
        txtCancelar.setPreferredSize(new java.awt.Dimension(150, 40));
        txtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCancelarActionPerformed(evt);
            }
        });

        btnEliminar2.setBackground(new java.awt.Color(76, 201, 223));
        btnEliminar2.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnEliminar2.setForeground(new java.awt.Color(0, 0, 0));
        btnEliminar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Eliminar 32.png"))); // NOI18N
        btnEliminar2.setText(" Eliminar");
        btnEliminar2.setPreferredSize(new java.awt.Dimension(150, 40));
        btnEliminar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar2ActionPerformed(evt);
            }
        });

        btnCobrar.setBackground(new java.awt.Color(76, 201, 223));
        btnCobrar.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnCobrar.setForeground(new java.awt.Color(0, 0, 0));
        btnCobrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Cobrar 32.png"))); // NOI18N
        btnCobrar.setText(" Cobrar");
        btnCobrar.setPreferredSize(new java.awt.Dimension(150, 40));
        btnCobrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCobrarActionPerformed(evt);
            }
        });

        txtImprimir.setBackground(new java.awt.Color(76, 201, 223));
        txtImprimir.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        txtImprimir.setForeground(new java.awt.Color(0, 0, 0));
        txtImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Imprimir 32.png"))); // NOI18N
        txtImprimir.setText(" Imprimir");
        txtImprimir.setPreferredSize(new java.awt.Dimension(150, 40));

        btnRegresar.setBackground(new java.awt.Color(76, 201, 223));
        btnRegresar.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(0, 0, 0));
        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Anterior 32.png"))); // NOI18N
        btnRegresar.setText(" Anterior");
        btnRegresar.setPreferredSize(new java.awt.Dimension(150, 40));
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        lblError.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        lblError.setForeground(new java.awt.Color(204, 0, 0));
        lblError.setEnabled(false);
        lblError.setPreferredSize(new java.awt.Dimension(200, 30));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtProd))))
                        .addGap(38, 38, 38)
                        .addComponent(txtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                        .addComponent(jScrollPane2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCobrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(71, 71, 71))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnAgregar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(106, 106, 106)
                                .addComponent(btnEliminar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(txtImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(btnCobrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(118, 118, 118)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );

        PanelPestañas.addTab("Detalle de Factura", jPanel2);

        jPanel4.setBackground(new java.awt.Color(253, 149, 53));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Facturar");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(PanelPestañas, javax.swing.GroupLayout.PREFERRED_SIZE, 1110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(PanelPestañas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (txtCliente.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No puede dejar el campo del cliente vacío","Campos vacios",JOptionPane.WARNING_MESSAGE);
        } else {
            
            try
        {
            Factura F = new Factura();
            SimpleDateFormat formater = new SimpleDateFormat("dd-MM-yyyy");
            String spinnerValue = formater.format(spFecha.getValue());
            Date date = formater.parse(spinnerValue);
            
            
            F.setNombreCliente(this.txtCliente.getText());
            F.setIdUsuario((Usuario) cmbUsuario.getSelectedItem());
            F.setFechaFactura(date);
            F.setEstadoFactura(0);
            
            JOptionPane.showMessageDialog(null, "Datos agregados exitosamente!");
           FC.create(F);
           CrearModelo();
           CargarTabla();
           this.txtCliente.setText("");
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        this.spFecha.setEnabled(true);
        this.txtCliente.setEnabled(true);
        this.btnAgregar.setEnabled(true);
        this.btnEliminar.setEnabled(true);
        this.btnLimpiar.setEnabled(true);
        this.btnNuevo.setEnabled(false);
        txtDireccion.setEnabled(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void tbProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProductoMouseClicked
        txtProd.setText(tbProducto.getValueAt(tbProducto.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_tbProductoMouseClicked

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        if (txtNumFac.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Seleccione una factura","Error",JOptionPane.WARNING_MESSAGE);
        } else {
            String id = txtNumFac.getText();
        numFac = (Factura) FC.findFactura(Integer.parseInt(id));
         PanelPestañas.setSelectedIndex(1);
         PanelPestañas.setEnabledAt(1,true);
         PanelPestañas.setEnabledAt(0, false);
         CrearModeloProd();
         CargarTablaProducto(this.txtProd.getText());
         CrearTablaDetalle();
         CargarTablaDetalle();
        }
        
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void txtClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClienteKeyReleased
        CrearModelo();
        CargarTabla();
    }//GEN-LAST:event_txtClienteKeyReleased

    private void btnAgregar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregar2ActionPerformed
        try {  
            DetalleFactura DF = new DetalleFactura();
            int mensaje = JOptionPane.showConfirmDialog(null, "¿Realmente desea añadir este producto a esta factura?", "Añadir factura",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (mensaje == 0) {
                    DF.setIdProducto(PC.findProducto(Integer.parseInt(this.tbProducto.getValueAt(tbProducto.getSelectedRow(),0).toString())));
                    DF.setNumFactura(numFac);
                    DFC.create(DF);
                    JOptionPane.showMessageDialog(null,"El producto fue añadido con éxito");
                    CrearTablaDetalle();
                    CargarTablaDetalle(); 
                }
                else{
                    JOptionPane.showMessageDialog(null,"El registro no se añadió");
                }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnAgregar2ActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
                int mensaje = JOptionPane.showConfirmDialog(null, "¿Realmente desea eliminar esta factura?", "Eliminar factura",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (mensaje == 0) {
                    FC.destroy(Eliminar.getNumFactura());
                    CrearModelo();
                    CargarTabla();
                    JOptionPane.showMessageDialog(null,"El registro fue eliminado con éxito");
                }else{
                    JOptionPane.showMessageDialog(null,"El registro no se eliminó");
                }

        } catch (Exception e) {
        }
       
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tbFacturaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbFacturaMouseClicked
        
        this.btnSiguiente.setEnabled(true);
        btnNuevo.setEnabled(false);
        btnAgregar.setEnabled(false);
        txtNumFac.setText(tbFactura.getValueAt(tbFactura.getSelectedRow(), 0).toString());
        txtCliente.setText(tbFactura.getValueAt(tbFactura.getSelectedRow(),1).toString());
        cmbUsuario.setSelectedItem(tbFactura.getValueAt(tbFactura.getSelectedRow(), 2).toString());
        spFecha.setValue(tbFactura.getValueAt(tbFactura.getSelectedRow(), 3));
        String id = tbFactura.getValueAt(tbFactura.getSelectedRow(), 0).toString(); 
        Eliminar = (Factura) FC.findFactura(Integer.parseInt(id));
        btnLimpiar.setEnabled(true);
    }//GEN-LAST:event_tbFacturaMouseClicked

    private void txtProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdKeyReleased
        CrearModeloProd();
        CargarTablaProducto(this.txtProd.getText());
    }//GEN-LAST:event_txtProdKeyReleased

    private void txtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCancelarActionPerformed
       txtProd.setText("");
       CrearModeloProd();
       CrearTablaDetalle();
       CargarTablaDetalle();
    }//GEN-LAST:event_txtCancelarActionPerformed

    private void btnEliminar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar2ActionPerformed
        try {
                int mensaje = JOptionPane.showConfirmDialog(null, "¿Realmente desea eliminar este producto de esta factura?", "Eliminar factura",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (mensaje == 0) {
                
                DFC.destroy(EliminarDetalleFactura.getIdDetalleFactura());
                JOptionPane.showMessageDialog(null,"El producto fue eliminado con éxito");
                CrearTablaDetalle();
                CargarTablaDetalle();
                
        }else{
                    JOptionPane.showMessageDialog(null,"El registro no fue eliminado");
                }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
    }//GEN-LAST:event_btnEliminar2ActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        this.PanelPestañas.setSelectedIndex(0);
         PanelPestañas.setEnabledAt(0, true);
         PanelPestañas.setEnabledAt(1, false);
         btnNuevo.setEnabled(true);
         CrearModelo();
         CargarTabla();
         Llenar_Combo();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnCobrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCobrarActionPerformed
        try {
            int resp = JOptionPane.showConfirmDialog(null, "¿Quiere cobrar esta factura?", "Cobrar", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == resp) {
                numFac.setEstadoFactura(1);
                JOptionPane.showMessageDialog(this, "Factura cobrada exitosamente","Cobrar",JOptionPane.INFORMATION_MESSAGE);
                FC.edit(numFac);
                txtProd.setText("");
                //lblTotal.setText("0.00");
                lblFactura.setText("");
                CrearTablaDetalle();
                CargarTablaDetalle();
                
            }
        
    } catch (Exception ex) {
        Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btnCobrarActionPerformed

    private void tbDetalleFacturaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDetalleFacturaMouseClicked
        String id = tbDetalleFactura.getValueAt(tbDetalleFactura.getSelectedRow(), 0).toString();
        EliminarDetalleFactura = (DetalleFactura) DFC.findDetalleFactura(Integer.parseInt(id));
    }//GEN-LAST:event_tbDetalleFacturaMouseClicked

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtNumFac.setText("");
        txtDireccion.setText("");
        txtCliente.setText("");
        btnNuevo.setEnabled(true);
        btnAgregar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        //Validación de regreso
        int mensaje = JOptionPane.showConfirmDialog(null, "¿Realmente desea regresar al menú principal?"
                + "Se descartarán los datos no guardados.", "Regresar al menú",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (mensaje == 0) {
                    MenuPrincipal menu = new MenuPrincipal();
                    menu.setVisible(true);
                    this.dispose();
            }else{
                    
                }
    }//GEN-LAST:event_btnMenuActionPerformed

    private void txtClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClienteKeyTyped
       char car = evt.getKeyChar();
        if(Character.isLetter(car) || evt.getKeyChar()==KeyEvent.VK_BACK_SPACE || evt.getKeyChar()==KeyEvent.VK_SPACE){
            
        }else{
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_txtClienteKeyTyped

    private void txtProdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdKeyTyped
        char car = evt.getKeyChar();
        if(Character.isLetter(car) || evt.getKeyChar()==KeyEvent.VK_BACK_SPACE || evt.getKeyChar()==KeyEvent.VK_SPACE){
        
        }else{
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_txtProdKeyTyped

    private void txtDireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyTyped
        char car = evt.getKeyChar();
        if(Character.isLetterOrDigit(car) || evt.getKeyChar()==KeyEvent.VK_BACK_SPACE || evt.getKeyChar()==KeyEvent.VK_SPACE){
            
        }else{
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_txtDireccionKeyTyped

    DefaultTableModel modelo;
    private void CrearModelo() {
        try {
            modelo = (new DefaultTableModel(
                    null, new String[]{
                        "# Factura", "Cliente","Usuario","Fecha"}) {
                Class[] types = new Class[]{
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,

                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int colIndex) {
                    return canEdit[colIndex];
                }
            });
            tbFactura.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    private void CargarTabla() {
        try {
            Object o[] = null;
            List<Factura> listFactura = FC.findbyEstado();
            for (int i = 0; i < listFactura.size(); i++) {
              
                modelo.addRow(o);
                modelo.setValueAt(listFactura.get(i).getNumFactura(), i, 0);
                modelo.setValueAt(listFactura.get(i).getNombreCliente(), i, 1);
                modelo.setValueAt(listFactura.get(i).getIdUsuario().getUsuario(), i, 2);
                modelo.setValueAt(listFactura.get(i).getFechaFactura(), i, 3);
                
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }    
    }
    
   DefaultTableModel modeloProd;
   private void CrearModeloProd(){
       try {
            modeloProd = (new DefaultTableModel(
                    null, new String[]{
                        "ID", "Nombre","Precio"}) {
                Class[] types = new Class[]{
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,

                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int colIndex) {
                    return canEdit[colIndex];
                }
            });
            tbProducto.setModel(modeloProd);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
   }
   private void CargarTablaProducto(String nombre){
       try {
            Object o[] = null;
            List<Producto> listProducto = PC.findProductoporNombre(nombre);
            for (int i = 0; i < listProducto.size(); i++) {
              
                modeloProd.addRow(o);
                modeloProd.setValueAt(listProducto.get(i).getIdProducto(), i, 0);
                modeloProd.setValueAt(listProducto.get(i).getNombre(), i, 1);
                modeloProd.setValueAt(listProducto.get(i).getPrecio(),i,2);
                
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }    
   }
   DefaultTableModel modeloDetalle;
   private void CrearTablaDetalle(){
    try {
            modeloDetalle = (new DefaultTableModel(
                    null, new String[]{
                        "ID", "Nombre","Precio","# Factura"}) {
                Class[] types = new Class[]{
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class

                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int colIndex) {
                    return canEdit[colIndex];
                }
            });
            tbDetalleFactura.setModel(modeloDetalle);
            lblTotal.setText("$ 0.00");
            precio = 0;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
}
   private void CargarTablaDetalle(){
       try {
            Object o[] = null;
            List<DetalleFactura> listDetalle  = DFC.findporFactura(numFac);
            for (int i = 0; i < listDetalle.size(); i++) {
              
                modeloDetalle.addRow(o);
                modeloDetalle.setValueAt(listDetalle.get(i).getIdDetalleFactura(), i, 0);
                modeloDetalle.setValueAt(listDetalle.get(i).getIdProducto().getNombre(), i, 1);
                modeloDetalle.setValueAt(listDetalle.get(i).getIdProducto().getPrecio(), i, 2);
                modeloDetalle.setValueAt(listDetalle.get(i).getNumFactura().getNumFactura(),i,3);
                
                precio = precio+listDetalle.get(i).getIdProducto().getPrecio();
            }
            lblTotal.setText(precio + ""); 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }    
   }
    private void Llenar_Combo(){
        cmbUsuario.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> jlist, Object o, int i, boolean bln, boolean bln1) {
                if (o instanceof Usuario) {
                    Usuario U = (Usuario) o;
                    return super.getListCellRendererComponent(jlist, U.getUsuario(), i, bln, bln1);
                }
                return super.getListCellRendererComponent(jlist, o, i, bln, bln1);
            }
        });
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Facturar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager ClinicaArevaloPUEntityManager;
    private javax.swing.JTabbedPane PanelPestañas;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregar2;
    private javax.swing.JButton btnCobrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminar2;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JComboBox<String> cmbUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblFactura;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JSpinner spFecha;
    private javax.swing.JTable tbDetalleFactura;
    private javax.swing.JTable tbFactura;
    private javax.swing.JTable tbProducto;
    private javax.swing.JButton txtCancelar;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JButton txtImprimir;
    private javax.swing.JTextField txtNumFac;
    private javax.swing.JTextField txtProd;
    private java.util.List<Entidades.Usuario> usuarioList;
    private java.util.List<Entidades.Usuario> usuarioList1;
    private javax.persistence.Query usuarioQuery;
    private javax.persistence.Query usuarioQuery1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
