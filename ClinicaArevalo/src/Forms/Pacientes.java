package Forms;
import Clases.Conexion;
import Controladores.PacienteJpaController;
import Entidades.Paciente;
import Entidades.entityMain;
import com.mysql.jdbc.Connection;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

public class Pacientes extends javax.swing.JFrame {
PacienteJpaController PC = new PacienteJpaController(entityMain.getInstance());
    Paciente Editar;
    Paciente Eliminar;

    public Pacientes() {
        initComponents();
        CrearModelo();
        CargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txtDireccion = new javax.swing.JTextField();
        Date date = new Date();
        SpinnerDateModel sm =
        new SpinnerDateModel(date, null, null, Calendar.DAY_OF_MONTH);
        spFecha = new javax.swing.JSpinner(sm);
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPacientes = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        txtNombres = new javax.swing.JTextField();
        txtOcupacion = new javax.swing.JTextField();
        btnReporte = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtIdPaciente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        txtSexo = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtBuscarNom = new javax.swing.JTextField();
        txtBuscarDui = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        lblErrorApellido = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();
        lblErrorOcupacion = new javax.swing.JLabel();
        lblErrorBusqueda = new javax.swing.JLabel();
        lblErrorBusquedaDUI = new javax.swing.JLabel();
        txtDUI = new javax.swing.JFormattedTextField();
        txtTelefono = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pacientes");
        setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        setForeground(new java.awt.Color(253, 149, 63));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(187, 232, 223));
        jPanel2.setPreferredSize(new java.awt.Dimension(1360, 700));

        jPanel1.setBackground(new java.awt.Color(15, 76, 129));
        jPanel1.setPreferredSize(new java.awt.Dimension(1100, 600));

        txtDireccion.setBackground(new java.awt.Color(239, 239, 239));
        txtDireccion.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtDireccion.setForeground(new java.awt.Color(0, 0, 0));
        txtDireccion.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtDireccion.setPreferredSize(new java.awt.Dimension(40, 40));

        JSpinner.DateEditor de = new JSpinner.DateEditor(spFecha, "dd-MM-yyyy");
        spFecha.setEditor(de);
        spFecha.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        spFecha.setPreferredSize(new java.awt.Dimension(40, 40));

        jLabel9.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(239, 239, 239));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Fecha de Nacimiento:");
        jLabel9.setPreferredSize(new java.awt.Dimension(40, 40));

        tbPacientes.setBackground(new java.awt.Color(239, 239, 239));
        tbPacientes.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbPacientes.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        tbPacientes.setForeground(new java.awt.Color(0, 0, 0));
        tbPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbPacientes);

        btnEditar.setBackground(new java.awt.Color(76, 201, 223));
        btnEditar.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(0, 0, 0));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Editar P.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setPreferredSize(new java.awt.Dimension(200, 60));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(239, 239, 239));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("DUI:");
        jLabel6.setPreferredSize(new java.awt.Dimension(40, 40));

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(239, 239, 239));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Direccion:");
        jLabel5.setPreferredSize(new java.awt.Dimension(40, 40));

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(239, 239, 239));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nombres:");
        jLabel3.setPreferredSize(new java.awt.Dimension(40, 40));

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(239, 239, 239));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Apellidos:");
        jLabel4.setPreferredSize(new java.awt.Dimension(40, 40));

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(239, 239, 239));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ID Paciente:");
        jLabel2.setPreferredSize(new java.awt.Dimension(40, 40));

        btnEliminar.setBackground(new java.awt.Color(76, 201, 223));
        btnEliminar.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 0, 0));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Eliminar P.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setPreferredSize(new java.awt.Dimension(200, 60));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        txtNombres.setBackground(new java.awt.Color(239, 239, 239));
        txtNombres.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtNombres.setForeground(new java.awt.Color(0, 0, 0));
        txtNombres.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtNombres.setPreferredSize(new java.awt.Dimension(40, 40));
        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombresKeyTyped(evt);
            }
        });

        txtOcupacion.setBackground(new java.awt.Color(239, 239, 239));
        txtOcupacion.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtOcupacion.setForeground(new java.awt.Color(0, 0, 0));
        txtOcupacion.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtOcupacion.setPreferredSize(new java.awt.Dimension(40, 40));
        txtOcupacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOcupacionActionPerformed(evt);
            }
        });
        txtOcupacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOcupacionKeyTyped(evt);
            }
        });

        btnReporte.setBackground(new java.awt.Color(76, 201, 223));
        btnReporte.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        btnReporte.setForeground(new java.awt.Color(0, 0, 0));
        btnReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Reportes 48.png"))); // NOI18N
        btnReporte.setText("Reporte");
        btnReporte.setPreferredSize(new java.awt.Dimension(200, 60));
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(239, 239, 239));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Ocupacion:");
        jLabel8.setPreferredSize(new java.awt.Dimension(40, 40));

        txtIdPaciente.setEditable(false);
        txtIdPaciente.setBackground(new java.awt.Color(239, 239, 239));
        txtIdPaciente.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtIdPaciente.setForeground(new java.awt.Color(0, 0, 0));
        txtIdPaciente.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtIdPaciente.setPreferredSize(new java.awt.Dimension(40, 40));

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(239, 239, 239));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Sexo:");
        jLabel7.setPreferredSize(new java.awt.Dimension(40, 40));

        btnAgregar.setBackground(new java.awt.Color(76, 201, 223));
        btnAgregar.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Nuevo Paciente.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setPreferredSize(new java.awt.Dimension(200, 60));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        txtSexo.setBackground(new java.awt.Color(239, 239, 239));
        txtSexo.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtSexo.setForeground(new java.awt.Color(0, 0, 0));
        txtSexo.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtSexo.setPreferredSize(new java.awt.Dimension(40, 40));
        txtSexo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSexoKeyTyped(evt);
            }
        });

        txtApellidos.setBackground(new java.awt.Color(239, 239, 239));
        txtApellidos.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtApellidos.setForeground(new java.awt.Color(0, 0, 0));
        txtApellidos.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtApellidos.setPreferredSize(new java.awt.Dimension(40, 40));
        txtApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidosKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(239, 239, 239));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Estado Civil:");
        jLabel10.setPreferredSize(new java.awt.Dimension(40, 40));

        txtEstado.setBackground(new java.awt.Color(239, 239, 239));
        txtEstado.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtEstado.setForeground(new java.awt.Color(0, 0, 0));
        txtEstado.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtEstado.setPreferredSize(new java.awt.Dimension(40, 40));
        txtEstado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEstadoKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(239, 239, 239));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Teléfono:");
        jLabel11.setPreferredSize(new java.awt.Dimension(150, 40));

        btnVolver.setBackground(new java.awt.Color(76, 201, 223));
        btnVolver.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(0, 0, 0));
        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Menu.png"))); // NOI18N
        btnVolver.setText("Menú Principal");
        btnVolver.setPreferredSize(new java.awt.Dimension(200, 60));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Buscar por:");

        txtBuscarNom.setBackground(new java.awt.Color(239, 239, 239));
        txtBuscarNom.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtBuscarNom.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscarNom.setPreferredSize(new java.awt.Dimension(300, 30));
        txtBuscarNom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarNomKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarNomKeyTyped(evt);
            }
        });

        txtBuscarDui.setBackground(new java.awt.Color(239, 239, 239));
        txtBuscarDui.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtBuscarDui.setPreferredSize(new java.awt.Dimension(40, 40));
        txtBuscarDui.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarDuiKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarDuiKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(239, 239, 239));
        jLabel14.setText("Nombre:");

        lblErrorApellido.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblErrorApellido.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorApellido.setEnabled(false);

        lblError.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 0, 0));
        lblError.setEnabled(false);

        lblErrorOcupacion.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorOcupacion.setEnabled(false);

        lblErrorBusqueda.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorBusqueda.setEnabled(false);

        lblErrorBusquedaDUI.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorBusquedaDUI.setEnabled(false);

        txtDUI.setBackground(new java.awt.Color(255, 255, 255));
        txtDUI.setForeground(new java.awt.Color(0, 0, 0));
        try {
            txtDUI.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("########-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDUI.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        txtTelefono.setBackground(new java.awt.Color(255, 255, 255));
        txtTelefono.setForeground(new java.awt.Color(0, 0, 0));
        try {
            txtTelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefono.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("DUI:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblErrorApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(60, 60, 60)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDUI, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrorOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtIdPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel13))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtBuscarDui, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblErrorBusquedaDUI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtBuscarNom, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                                    .addComponent(lblErrorBusqueda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(358, 358, 358))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btnReporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtIdPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDUI, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblErrorApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblErrorOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtBuscarDui, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(txtBuscarNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblErrorBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblErrorBusquedaDUI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(4, 4, 4)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(253, 149, 53));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel4.setPreferredSize(new java.awt.Dimension(182, 60));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pacientes");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1344, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 1360, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Agrega un nuevo registro con los datos ingresados
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (txtNombres.getText().equals("") || txtDUI.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Los campos de Nombre y DUI no pueden estar vacíos","Error, campos vacíos",JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
            Paciente P = new Paciente();
            char caracter = txtSexo.getText().charAt(0);
            char caracterEstado = txtEstado.getText().charAt(0);

            SimpleDateFormat formater = new SimpleDateFormat("dd-MM-yyyy");
            String spinnerValue = formater.format(spFecha.getValue());
            Date date = formater.parse(spinnerValue);

            P.setSexo(caracter);
            P.setNombres(this.txtNombres.getText());
            P.setApellidos(this.txtApellidos.getText());
            P.setDui(this.txtDUI.getText().toString());
            P.setFechaNacimiento(date);
            P.setOcupacion(this.txtOcupacion.getText());
            P.setDireccion(this.txtDireccion.getText());
            P.setEstadoCivil(caracterEstado);
            P.setTelefono(this.txtTelefono.getText().toString());

            //Validación de datos
            int mensaje = JOptionPane.showConfirmDialog(null, "¿Datos correctos?", "Crear paciente",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (mensaje == 0) {
                PC.create(P);
                JOptionPane.showMessageDialog(null,"El paciente fue añadido exitosamente");
                CrearModelo();
                CargarTabla();
                //Limpia los campos luego de añadir un nuevo registro
                txtIdPaciente.setText("");
                txtNombres.setText("");
                txtApellidos.setText("");
                txtDUI.setText("");
                txtOcupacion.setText("");
                txtDireccion.setText("");
                txtTelefono.setText("");
                txtSexo.setText("");
                txtEstado.setText("");

            }else{
                    JOptionPane.showMessageDialog(null,"El paciente no fue añadido");
                }      
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void txtOcupacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOcupacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOcupacionActionPerformed
    //Carga los datos a los campos según la selección de la tabla
    private void tbPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPacientesMouseClicked
        txtIdPaciente.setText(tbPacientes.getValueAt(tbPacientes.getSelectedRow(), 0).toString());
        txtNombres.setText(tbPacientes.getValueAt(tbPacientes.getSelectedRow(), 1).toString());
        txtApellidos.setText(tbPacientes.getValueAt(tbPacientes.getSelectedRow(), 2).toString());
        spFecha.setValue(tbPacientes.getValueAt(tbPacientes.getSelectedRow(), 3));
        txtDUI.setText(tbPacientes.getValueAt(tbPacientes.getSelectedRow(), 4).toString());
        txtSexo.setText(tbPacientes.getValueAt(tbPacientes.getSelectedRow(), 5).toString());
        txtOcupacion.setText(tbPacientes.getValueAt(tbPacientes.getSelectedRow(), 6).toString());
        txtDireccion.setText(tbPacientes.getValueAt(tbPacientes.getSelectedRow(), 7).toString());
        txtEstado.setText(tbPacientes.getValueAt(tbPacientes.getSelectedRow(), 8).toString());
        txtTelefono.setText(tbPacientes.getValueAt(tbPacientes.getSelectedRow(),9).toString());

        String id = tbPacientes.getValueAt(tbPacientes.getSelectedRow(), 0).toString();
        Editar = (Paciente) PC.findPaciente(Integer.parseInt(id));
        Eliminar = (Paciente) PC.findPaciente(Integer.parseInt(id));   
    }//GEN-LAST:event_tbPacientesMouseClicked
    //Edita el registro seleccionado
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (txtNombres.getText().equals("") || txtDUI.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Los campos de Nombre y DUI no pueden estar vacíos","Error, campos vacíos",JOptionPane.INFORMATION_MESSAGE);
        }else{
            try {
            SimpleDateFormat formater = new SimpleDateFormat("dd-MM-yyyy");
            String spinnerValue = formater.format(spFecha.getValue());
            Date date = formater.parse(spinnerValue);
            char caracter = txtSexo.getText().charAt(0);
            char caracterEstado = txtEstado.getText().charAt(0);
            
             Editar.setNombres(this.txtNombres.getText());
             Editar.setApellidos(this.txtApellidos.getText());
             Editar.setSexo(caracter);
             Editar.setDui(this.txtDUI.getText());
             Editar.setFechaNacimiento(date);
             Editar.setOcupacion(this.txtOcupacion.getText());
             Editar.setDireccion(this.txtDireccion.getText());
             Editar.setEstadoCivil(caracterEstado);
             Editar.setTelefono(this.txtTelefono.getText());
             
             //Validación de datos para editar
            int mensaje = JOptionPane.showConfirmDialog(null, "¿Datos correctos?", "Editar paciente",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (mensaje == 0) {
                PC.edit(Editar);
                JOptionPane.showMessageDialog(null,"El registro fue editado con éxito");
                CrearModelo();
                CargarTabla();
             //Limpia los campos luego de editar un registro
                txtIdPaciente.setText("");
                txtNombres.setText("");
                txtApellidos.setText("");
                txtDUI.setText("");
                txtOcupacion.setText("");
                txtDireccion.setText("");
                txtTelefono.setText("");
                txtSexo.setText("");
                txtEstado.setText("");
  
            }else{
                    JOptionPane.showMessageDialog(null,"El registro no se editó");
                }           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        }    
    }//GEN-LAST:event_btnEditarActionPerformed
    //Elimina un registro tomando el id
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
        //Confirmación de eliminación de registro
                int mensaje = JOptionPane.showConfirmDialog(null, "Realmente desea eliminar el paciente", "Eliminar paciente",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (mensaje == 0) {
                PC.destroy(Eliminar.getIdPaciente());
                JOptionPane.showMessageDialog(null,"El registro fue eliminado con Exito");
                CrearModelo();
                CargarTabla();
                //Limpia los campos luego de eliminar un registro
                txtIdPaciente.setText("");
                txtNombres.setText("");
                txtApellidos.setText("");
                txtDUI.setText("");
                txtOcupacion.setText("");
                txtDireccion.setText("");
                txtTelefono.setText("");
                txtSexo.setText("");
                txtEstado.setText("");
       
            }else{
                    JOptionPane.showMessageDialog(null,"El registro no fue eliminado");
                }
               
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } 
    }//GEN-LAST:event_btnEliminarActionPerformed
    //Regresa al menú
    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        //Validación de regreso
        int mensaje = JOptionPane.showConfirmDialog(null, "¿Realmente desea regresar al menú principal?"
                + "Se descartarán los datos no guardados.", "Regresar al menú",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (mensaje == 0) {
                    MenuPrincipal menu = new MenuPrincipal();
                    menu.setVisible(true);
                    this.dispose();
            }else{
                    
                }
        
    }//GEN-LAST:event_btnVolverActionPerformed
    //Llama al método buscar por nombre con el valor del textfield
    private void txtBuscarNomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarNomKeyReleased
       CrearModelo();
       CargarTablaPacientesporNombre(this.txtBuscarNom.getText());
    }//GEN-LAST:event_txtBuscarNomKeyReleased
    //Llama al método buscar por dui con el valor del textfield
    private void txtBuscarDuiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarDuiKeyReleased
        CrearModelo();
        CargarTablaPacientesporDui(this.txtBuscarDui.getText().toString());
    }//GEN-LAST:event_txtBuscarDuiKeyReleased
    //Validaciones de campos
    private void txtNombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyTyped
        char car = evt.getKeyChar();
        if(Character.isLetter(car) || evt.getKeyChar()==KeyEvent.VK_BACK_SPACE || evt.getKeyChar()==KeyEvent.VK_SPACE){
            lblError.setText("");
        }else{
            evt.consume();
            lblError.setText("Ingresa solo letras");
        }
    }//GEN-LAST:event_txtNombresKeyTyped

    private void txtApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosKeyTyped
        char car = evt.getKeyChar();
        if(Character.isLetter(car) || evt.getKeyChar()==KeyEvent.VK_BACK_SPACE || evt.getKeyChar()==KeyEvent.VK_SPACE){
            lblErrorApellido.setText("");
        }else{
            evt.consume();
            lblErrorApellido.setText("Ingresa solo letras");
        }
    }//GEN-LAST:event_txtApellidosKeyTyped

    private void txtBuscarNomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarNomKeyTyped
        char car = evt.getKeyChar();
        if(Character.isLetter(car) || evt.getKeyChar()==KeyEvent.VK_BACK_SPACE || evt.getKeyChar()==KeyEvent.VK_SPACE){
            lblErrorBusqueda.setText("");
        }else{
            evt.consume();
            lblErrorBusqueda.setText("Ingresa solo letras");
        }
    }//GEN-LAST:event_txtBuscarNomKeyTyped

    private void txtOcupacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOcupacionKeyTyped
        char car = evt.getKeyChar();
        if(Character.isLetter(car) || evt.getKeyChar()==KeyEvent.VK_BACK_SPACE || evt.getKeyChar()==KeyEvent.VK_SPACE){
            lblErrorOcupacion.setText("");
        }else{
            evt.consume();
            lblErrorOcupacion.setText("Ingresa solo letras");
        }
    }//GEN-LAST:event_txtOcupacionKeyTyped

    private void txtEstadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstadoKeyTyped
        char car = evt.getKeyChar();
        if(Character.isLetter(car) || evt.getKeyChar()==KeyEvent.VK_BACK_SPACE || evt.getKeyChar()==KeyEvent.VK_SPACE){
        }else{
            evt.consume();
        }
    }//GEN-LAST:event_txtEstadoKeyTyped

    private void txtSexoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSexoKeyTyped
        char car = evt.getKeyChar();
        if(Character.isLetter(car) || evt.getKeyChar()==KeyEvent.VK_BACK_SPACE || evt.getKeyChar()==KeyEvent.VK_SPACE){
        }else{
            evt.consume();
        }
    }//GEN-LAST:event_txtSexoKeyTyped

    private void txtBuscarDuiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarDuiKeyTyped
        char car = evt.getKeyChar();
        if(Character.isDigit(car) || evt.getKeyChar()==KeyEvent.VK_BACK_SPACE || evt.getKeyChar()==KeyEvent.VK_SPACE){
        }else{
            evt.consume();
        }
    }//GEN-LAST:event_txtBuscarDuiKeyTyped

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
        try  {
            Conexion con = new Conexion();
            Connection conn = con.getConexion();
            int id = Integer.parseInt(tbPacientes.getValueAt(tbPacientes.getSelectedRow(), 0).toString());
            String path = "src\\Reportes\\Paciente.jasper";
            JasperReport reporte = null;
            reporte =(JasperReport) JRLoader.loadObjectFromFile(path);
            Map parametro = new HashMap();
            parametro.put("idPaciente", id);
            JasperPrint j = JasperFillManager.fillReport(reporte, parametro, conn);
            JasperViewer jv= new JasperViewer(j,false);
            jv.setTitle("Paciente / Clinica Arevalo");
            jv.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            jv.setVisible(true);
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }//GEN-LAST:event_btnReporteActionPerformed
DefaultTableModel modelo;
    //Crea modelo de la tabla
    private void CrearModelo() {
        try {
            modelo = (new DefaultTableModel(
                    null, new String[]{
                        "ID", "Nombres","Apellidos",
                        "Fecha de Nacimiento","DUI","Sexo","Ocupación",
                         "Dirección","Estado Civil","Teléfono"}) {
                Class[] types = new Class[]{
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int colIndex) {
                    return canEdit[colIndex];
                }
            });
            tbPacientes.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    //Carga datos de pacientes a la tabla
    private void CargarTabla() {
        try {
            
            Object o[] = null;
            List<Paciente> listUsuarios = PC.findPacienteEntities();
            for (int i = 0; i < listUsuarios.size(); i++) {
                
                modelo.addRow(o);
                modelo.setValueAt(listUsuarios.get(i).getIdPaciente(), i, 0);
                modelo.setValueAt(listUsuarios.get(i).getNombres(), i, 1);
                modelo.setValueAt(listUsuarios.get(i).getApellidos(), i, 2);
                modelo.setValueAt(listUsuarios.get(i).getFechaNacimiento(), i, 3);
                modelo.setValueAt(listUsuarios.get(i).getDui(), i, 4);
                modelo.setValueAt(listUsuarios.get(i).getSexo(), i, 5);
                modelo.setValueAt(listUsuarios.get(i).getOcupacion(), i, 6);
                modelo.setValueAt(listUsuarios.get(i).getDireccion(), i, 7);
                modelo.setValueAt(listUsuarios.get(i).getEstadoCivil(), i, 8);
                modelo.setValueAt(listUsuarios.get(i).getTelefono(), i, 9);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    //Llamada del método para buscar por Nombre
    private void CargarTablaPacientesporNombre(String nombre ) {
        try {
            Object o[] = null;
            List<Paciente> listPacientes = PC.findPacienteporNombre(nombre);
            for (int i = 0; i < listPacientes.size(); i++) {
                modelo.addRow(o);
                modelo.setValueAt(listPacientes.get(i).getIdPaciente(), i, 0);
                modelo.setValueAt(listPacientes.get(i).getNombres(), i, 1);
                modelo.setValueAt(listPacientes.get(i).getApellidos(), i, 2);
                modelo.setValueAt(listPacientes.get(i).getFechaNacimiento(), i, 3);
                modelo.setValueAt(listPacientes.get(i).getDui(), i, 4);
                modelo.setValueAt(listPacientes.get(i).getSexo(), i, 5);
                modelo.setValueAt(listPacientes.get(i).getOcupacion(), i, 6);
                modelo.setValueAt(listPacientes.get(i).getDireccion(), i, 7);
                modelo.setValueAt(listPacientes.get(i).getEstadoCivil(), i, 8);
                modelo.setValueAt(listPacientes.get(i).getTelefono(), i, 9);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }    
    }
    //Llamada del método para buscar por Dui
    private void CargarTablaPacientesporDui(String dui ) {
        try {
            Object o[] = null;
            List<Paciente> listPacientes = PC.findPacienteporDui(dui);
            for (int i = 0; i < listPacientes.size(); i++) {
                modelo.addRow(o);
                modelo.setValueAt(listPacientes.get(i).getIdPaciente(), i, 0);
                modelo.setValueAt(listPacientes.get(i).getNombres(), i, 1);
                modelo.setValueAt(listPacientes.get(i).getApellidos(), i, 2);
                modelo.setValueAt(listPacientes.get(i).getFechaNacimiento(), i, 3);
                modelo.setValueAt(listPacientes.get(i).getDui(), i, 4);
                modelo.setValueAt(listPacientes.get(i).getSexo(), i, 5);
                modelo.setValueAt(listPacientes.get(i).getOcupacion(), i, 6);
                modelo.setValueAt(listPacientes.get(i).getDireccion(), i, 7);
                modelo.setValueAt(listPacientes.get(i).getEstadoCivil(), i, 8);
                modelo.setValueAt(listPacientes.get(i).getTelefono(), i, 9);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }    
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pacientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnReporte;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblErrorApellido;
    private javax.swing.JLabel lblErrorBusqueda;
    private javax.swing.JLabel lblErrorBusquedaDUI;
    private javax.swing.JLabel lblErrorOcupacion;
    private javax.swing.JSpinner spFecha;
    private javax.swing.JTable tbPacientes;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtBuscarDui;
    private javax.swing.JTextField txtBuscarNom;
    private javax.swing.JFormattedTextField txtDUI;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtIdPaciente;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtOcupacion;
    private javax.swing.JTextField txtSexo;
    private javax.swing.JFormattedTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
